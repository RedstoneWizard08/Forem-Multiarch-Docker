FROM ubuntu:impish as ruby

LABEL maintainer="Forem Systems Engineering <systems@forem.com>"

USER root

ARG DEBIAN_FRONTEND=noninteractive
ARG RUBY_VERSION=3.0.2
ARG RUBY_SHORT_VERSION=3.0
ARG RUBY_URL="https://cache.ruby-lang.org/pub/ruby/${RUBY_SHORT_VERSION}/ruby-${RUBY_VERSION}.tar.gz"
# export RUBY_URL=https://cache.ruby-lang.org/pub/ruby/3.0/ruby-3.0.2.tar.gz

RUN apt-get update && \
    apt-get -y upgrade && \
    apt-get -y install bash autoconf bison curl git gzip \
    make patch tar wget xz-utils file gcc g++ openssl readline-common \
    libreadline-dev libzip-dev libxml2-dev libncurses-dev libffi-dev \
    libxslt1-dev libglib2.0-dev libgmp-dev libgdbm-dev bzip2 \
    libglib2.0-0 libcurl4-openssl-dev sudo ninja-build gnupg \
    openssl libssl-dev && \
    curl -fsSLo ruby.tar.gz "${RUBY_URL}" && \
    mkdir -p /usr/src && \
    tar -C /usr/src -zxvf ruby.tar.gz && \
    rm ruby.tar.gz && \
    cd /usr/src/ruby-${RUBY_VERSION} && \
    ./configure && \
    make && \
    make install && \
    cd / && \
    rm -rf /usr/src/ruby-${RUBY_VERSION} && \
    apt-get clean && \
    apt-get -y autoremove && \
    apt-get -y autoclean && \
    rm -rf /var/lib/apt/lists/*

ENV BUNDLE_SILENCE_ROOT_WARNING=1
ENV RUBY_MAJOR=3.0
ENV RUBY_VERSION=3.0.2

CMD [ "/usr/local/bin/irb" ]

FROM ruby as base

FROM base as builder

USER root

RUN curl -fsSL https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - && \
    echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee \
    /etc/apt/sources.list.d/yarn.list && \
    curl -fsSL https://deb.nodesource.com/setup_16.x | bash && \
    apt-get update && \
    apt-get -y upgrade && \
    apt-get -y install imagemagick iproute2 libjemalloc-dev libjemalloc2 less curl \
    libcurl4-openssl-dev libffi-dev libxml2-dev libxslt1-dev nodejs libpcre2-dev \
    postgresql postgresql-server-dev-13 postgresql-server-dev-all tzdata yarn \
    ca-certificates apt-transport-https libssl-dev openssl && \
    apt-get clean && \
    apt-get -y autoremove && \
    apt-get -y autoclean && \
    rm -rf /var/lib/apt/lists/*

ENV BUNDLER_VERSION=2.2.22 BUNDLE_SILENCE_ROOT_WARNING=true BUNDLE_SILENCE_DEPRECATIONS=true
RUN gem install -N bundler:"${BUNDLER_VERSION}"

ENV APP_USER=forem APP_UID=1000 APP_GID=1000 APP_HOME=/opt/apps/forem
RUN mkdir -p ${APP_HOME} && chown "${APP_UID}":"${APP_GID}" "${APP_HOME}" && \
    groupadd -g "${APP_GID}" "${APP_USER}" && \
    adduser --uid "${APP_UID}" --gid "${APP_GID}" --home "${APP_HOME}" --disabled-password \
    "${APP_USER}" && \
    passwd --delete "${APP_USER}"

ENV DOCKERIZE_VERSION=v0.6.1
RUN wget https://github.com/jwilder/dockerize/releases/download/"${DOCKERIZE_VERSION}"/dockerize-linux-$(dpkg --print-architecture)-"${DOCKERIZE_VERSION}".tar.gz \
    && tar -C /usr/local/bin -xzvf dockerize-linux-$(dpkg --print-architecture)-"${DOCKERIZE_VERSION}".tar.gz \
    && rm dockerize-linux-$(dpkg --print-architecture)-"${DOCKERIZE_VERSION}".tar.gz \
    && chown root:root /usr/local/bin/dockerize

WORKDIR "${APP_HOME}"

COPY ./forem/.ruby-version "${APP_HOME}"/
COPY ./forem/Gemfile ./forem/Gemfile.lock "${APP_HOME}"/
COPY ./forem/vendor/cache "${APP_HOME}"/vendor/cache

RUN bundle config --local build.sassc --disable-march-tune-native && \
    BUNDLE_WITHOUT="development:test" bundle install --deployment --jobs 4 --retry 5 && \
    find "${APP_HOME}"/vendor/bundle -name "*.c" -delete && \
    find "${APP_HOME}"/vendor/bundle -name "*.o" -delete

COPY ./forem "${APP_HOME}"

RUN mkdir -p "${APP_HOME}"/public/{assets,images,packs,podcasts,uploads}

RUN sed -i 's/"canvas": "\^2.9.1",/"canvas": "https\:\/\/github.com\/RedstoneWizard08\/node-canvas",/g' "${APP_HOME}/package.json" && \
    rm -rf .git && \
    NODE_ENV=production yarn install

COPY ./forem/.git "${APP_HOME}"/

RUN RAILS_ENV=production NODE_ENV=production bundle exec rake assets:precompile

RUN echo $(date -u +'%Y-%m-%dT%H:%M:%SZ') >> "${APP_HOME}"/FOREM_BUILD_DATE && \
    echo $(git rev-parse --short HEAD) >> "${APP_HOME}"/FOREM_BUILD_SHA && \
    rm -rf "${APP_HOME}"/.git/

RUN rm -rf node_modules vendor/assets spec

## Production
FROM base as production

USER root

RUN curl -fsSL https://deb.nodesource.com/setup_16.x | bash && \
    apt-get update && \
    apt-get -y upgrade && \
    apt-get -y install bash curl imagemagick iproute jemalloc less libcurl \
    postgresql tzdata nodejs libpq-dev && \
    apt-get clean && \
    apt-get -y autoremove && \
    apt-get -y autoclean && \
    rm -rf /var/lib/apt/lists/*

ENV BUNDLER_VERSION=2.2.22 BUNDLE_SILENCE_ROOT_WARNING=1
RUN gem install -N bundler:"${BUNDLER_VERSION}"

ENV APP_USER=forem APP_UID=1000 APP_GID=1000 APP_HOME=/opt/apps/forem
RUN mkdir -p ${APP_HOME} && chown "${APP_UID}":"${APP_GID}" "${APP_HOME}" && \
    groupadd -g "${APP_GID}" "${APP_USER}" && \
    adduser --uid "${APP_UID}" --gid "${APP_GID}" --home "${APP_HOME}" --disabled-password \
    "${APP_USER}" && \
    passwd --delete "${APP_USER}"

COPY --from=builder --chown="${APP_USER}":"${APP_USER}" ${APP_HOME} ${APP_HOME}

USER "${APP_USER}"
WORKDIR "${APP_HOME}"

VOLUME "${APP_HOME}"/public/

ENTRYPOINT ["./scripts/entrypoint.sh"]

CMD ["bundle", "exec", "rails", "server", "-b", "0.0.0.0", "-p", "3000"]

## Testing
FROM builder AS testing

USER root

RUN apt-get update && \
    apt-get -y upgrade && \
    apt-get -y install software-properties-common apt-transport-https && \
    add-apt-repository -y "deb http://ppa.launchpad.net/canonical-chromium-builds/stage/ubuntu/ bionic main" && \
    apt-get -y install chromium-browser && \
    apt-get clean && \
    apt-get -y autoremove && \
    apt-get -y autoclean && \
    rm -rf /var/lib/apt/lists/*

COPY --chown="${APP_USER}":"${APP_USER}" ./forem/spec "${APP_HOME}"/spec
COPY --from=builder /usr/local/bin/dockerize /usr/local/bin/dockerize

RUN chown "${APP_USER}":"${APP_USER}" -R "${APP_HOME}"

USER "${APP_USER}"

RUN bundle config --local build.sassc --disable-march-tune-native && \
    bundle config --delete without && \
    bundle install --deployment --jobs 4 --retry 5 && \
    find "${APP_HOME}"/vendor/bundle -name "*.c" -delete && \
    find "${APP_HOME}"/vendor/bundle -name "*.o" -delete

ENTRYPOINT ["./scripts/entrypoint.sh"]

CMD ["bundle", "exec", "rails", "server", "-b", "0.0.0.0", "-p", "3000"]

## Development
FROM builder AS development

COPY --chown="${APP_USER}":"${APP_USER}" ./forem/spec "${APP_HOME}"/spec
COPY --from=builder /usr/local/bin/dockerize /usr/local/bin/dockerize

RUN chown "${APP_USER}":"${APP_USER}" -R "${APP_HOME}"

USER "${APP_USER}"

RUN bundle config --local build.sassc --disable-march-tune-native && \
    bundle config --delete without && \
    bundle install --deployment --jobs 4 --retry 5 && \
    find "${APP_HOME}"/vendor/bundle -name "*.c" -delete && \
    find "${APP_HOME}"/vendor/bundle -name "*.o" -delete

ENTRYPOINT ["./scripts/entrypoint.sh"]

CMD ["bundle", "exec", "rails", "server", "-b", "0.0.0.0", "-p", "3000"]
